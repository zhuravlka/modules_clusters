{
    "contents" : "library('RColorBrewer')\nlibrary('gnuplot')\nlibrary('gplots')\n\n\ncount.correlation.count.array <-function(result.data.frame, correlation.in.interest){\n  #result.data.frame<-correlation_result.module_cluster_brain\n  correlation.in.interest<-correlation.in.interest\n  #create result.correlation.count.array\n  #result.correlation.count.array <-array(list(NULL), dim=c(nrow(result.data.frame),ncol(result.data.frame)), dimnames= list(rownames(result.data.frame),colnames(result.data.frame)))\n  \n  result.correlation.count.matrix <-matrix(data= NA, nrow=nrow(result.data.frame), ncol=ncol(result.data.frame), byrow=FALSE,dimnames= list(rownames(result.data.frame),colnames(result.data.frame)))\n  \n  \n  #substrate correlation counts and fill the array with them\n  for (module.name in rownames(result.data.frame)) {\n    for (cluster.name in colnames(result.data.frame)) {\n      \n      #correlation.in.interest<-'relative.distances.ecdf.area.correlation'\n      \n      #correlation.in.interest<-'jaccard.measure'\n      \n      #correlation.in.interest<-'scaled.absolute.min.distance.sum.p.value'\n      \n      #correlation.in.interest<-'projection.test.p.value'\n      #true.false.list<- list(\"scaled.absolute.min.distance.sum.p.value\", \"projection.test.p.value\")\n      \n      #if(correlation.in.interest %in% true.false.list){\n      #if (correlation.in.interest == \"scaled.absolute.min.distance.sum.p.value\" ){\n      #result.data.frame[unname(module.name), unname(cluster.name)][[1]]$awhole[correlation.in.interest][[1]]\n      # }\n      #if (result.data.frame[unname(module.name), unname(cluster.name)][[1]]$awhole$scaled.absolute.min.distance.sum.lower.tail)    \n      \n      #}\n      \n      \n      \n      if(\"awhole\" %in% names(result.data.frame[unname(module.name), unname(cluster.name)][[1]])){\n        #print('it is true')\n        current.correlation.count <- result.data.frame[unname(module.name), unname(cluster.name)][[1]]$awhole[correlation.in.interest][[1]]\n      \n        if (is.na(as.numeric(current.correlation.count))){\n          result.correlation.count.matrix[unname(module.name), unname(cluster.name)]<-0\n        }\n        else{\n          result.correlation.count.matrix[unname(module.name), unname(cluster.name)]<-as.numeric(current.correlation.count)\n        }\n        \n      }\n      else {\n        #print('false')\n        #result.correlation.count.matrix[unname(module.name), unname(cluster.name)]<-c(0)\n        result.correlation.count.matrix[module.name, cluster.name]<-c(0)\n      }\n      \n    }\n  }\n  return(result.correlation.count.matrix)\n}\n\n\n\nheatmap.and.save<-function(matrix.brain,matrix.all, matrix.active, correlation.in.interest){\n  name<-paste(correlation.in.interest,\"matrix.brain\", sep = \"_\")\n  png(paste(name, \".png\", sep=\"\"), pointsize = 10,width = 600, height = 600)\n  col.na.vector<-c()\n  for (element in strsplit(colnames(matrix.brain), \"\\\\.\")){\n    col.na.vector<-c(col.na.vector, paste(element[1], element[2], sep=\".\"))\n  }\n  heatmap.2(matrix.brain,trace='none', col=bluered ,dendrogram=\"none\", Colv=NA, Rowv=NA, scale=\"none\", main=paste(\"brain\",correlation.in.interest,  sep=\"_\"), labRow=rownames(matrix.brain), labCol=col.na.vector)\n  dev.off()\n  \n  \n  name<-paste(correlation.in.interest,\"matrix.all\", sep = \"_\")\n  png(paste(name, \".png\", sep=\"\"),pointsize = 10,width = 600, height = 600)\n  col.na.vector<-c()\n  for (element in strsplit(colnames(matrix.all), \"\\\\.\")){\n    col.na.vector<-c(col.na.vector, paste(element[1], element[2], sep=\".\"))\n  }\n  heatmap.2(matrix.all,col=bluered,trace='none',dendrogram=\"none\",Colv=NA, Rowv=NA,   scale=\"none\", main=paste(\"all\",correlation.in.interest,  sep=\"_\"), labRow=rownames(matrix.all), labCol=col.na.vector)\n  dev.off()\n  \n  \n  name<-paste(correlation.in.interest,\"matrix.active\", sep = \"_\")\n  png(paste(name, \".png\", sep=\"\"),pointsize = 10,width = 600, height = 600)\n  col.na.vector<-c()\n  for (element in strsplit(colnames(matrix.active), \"\\\\.\")){\n    col.na.vector<-c(col.na.vector, paste(element[1], element[2], sep=\".\"))\n  }\n  heatmap.2(matrix.active,col=bluered,trace='none',dendrogram=\"none\",Colv=NA, Rowv=NA, scale=\"none\", main=paste(\"active\",correlation.in.interest,  sep=\"_\"), labRow=rownames(matrix.active), labCol=col.na.vector)\n  dev.off()\n  \n  \n}\n\n\n#remake.matrix(matrix.brain,matrix.brain.lowertail)\n\nremake.matrix <- function(pvalues, lowertails){\n  \n  for (current.row in rownames(pvalues)){\n    for(current.column in colnames(pvalues)){\n      #print(lowertails[current.row, current.column])\n    \n      if(lowertails[current.row, current.column] == 0){\n        pvalues[current.row, current.column]<- 1-pvalues[current.row, current.column]\n      }\n      else {\n        pvalues[current.row, current.column]<-pvalues[current.row, current.column]\n      }\n    }\n  }\n  return(pvalues)\n\n}\n\n\n#heatmap.and.save.pvalue2(new.matrix.brain,new.matrix.all, new.matrix.active, correlation.in.interest)\n\nheatmap.and.save.pvalue2<-function(new.matrix.brain,new.matrix.all, new.matrix.active,  correlation.in.interest){\n\n#heatmap.and.save.pvalue2<-function(matrix.brain,matrix.all, matrix.active,matrix.brain.lowertail,matrix.all.lowertail, matrix.active.lowertail, correlation.in.interest, correlation.lowertails){\n  \n  name<-paste(correlation.in.interest,\"matrix.brain\", sep = \"_\")\n  png(paste(name, \".png\", sep=\"\"), pointsize = 10,width = 600, height = 600)\n  col.na.vector<-c()\n  for (element in strsplit(colnames(new.matrix.brain), \"\\\\.\")){\n    col.na.vector<-c(col.na.vector, paste(element[1], element[2], sep=\".\"))\n  }\n  \n\n  #breaks = seq(0,max(matrix.brain),by=0.01)\n  #breaks2 <- seq(0.05,1,length.out=5)\n  #breaks1 <- seq(0, 0.05,length.out=5)\n  #gradient1 <- colorpanel( 4, \"white\", \"blue\")\n  #gradient2 <- colorpanel( 5, \"white\",\"red\"  )\n  #hm.colors <- c(rev(gradient1),gradient2[-1])\n  #breaks <-c(breaks1, breaks2[-1])\n  \n  breaks <- c(seq(0, 0.05, length.out=5),seq(0.05, 1, length.out=6)[-1])\n  hm.colors <- colorpanel(n=9,low=\"blue\",mid=\"white\",high=\"red\")\n  \n  heatmap.2(new.matrix.brain,trace='none',breaks=breaks,col=hm.colors,dendrogram=\"none\", Colv=NA, Rowv=NA, scale=\"none\", main=paste(\"brain\",correlation.in.interest,  sep=\"_\"), labRow=rownames(new.matrix.brain), labCol=col.na.vector)\n  dev.off()\n  \n  \n  name<-paste(correlation.in.interest,\"matrix.all\", sep = \"_\")\n  png(paste(name, \".png\", sep=\"\"),pointsize = 10,width = 600, height = 600)\n  col.na.vector<-c()\n  for (element in strsplit(colnames(new.matrix.all), \"\\\\.\")){\n    col.na.vector<-c(col.na.vector, paste(element[1], element[2], sep=\".\"))\n  }\n  \n  #breaks = seq(0,max(matrix.all),by=0.01)\n  breaks <- c(seq(0, 0.05, length.out=5),seq(0.05, 1, length.out=6)[-1])\n  hm.colors <- colorpanel(n=9,low=\"blue\",mid=\"white\",high=\"red\")\n  \n  #heatmap.2(matrix.brain,trace='none',breaks=breaks,col=hm.colors,dendrogram=\"none\", Colv=NA, Rowv=NA, scale=\"none\", main=paste(\"brain\",correlation.in.interest,  sep=\"_\"), labRow=rownames(matrix.brain), labCol=col.na.vector)\n  \n  heatmap.2(new.matrix.all,trace='none',breaks=breaks,col=hm.colors,dendrogram=\"none\",Colv=NA, Rowv=NA,   scale=\"none\", main=paste(\"all\",correlation.in.interest,  sep=\"_\"), labRow=rownames(new.matrix.all), labCol=col.na.vector)\n  dev.off()\n  \n  \n  name<-paste(correlation.in.interest,\"matrix.active\", sep = \"_\")\n  png(paste(name, \".png\", sep=\"\"),pointsize = 10,width = 600, height = 600)\n  col.na.vector<-c()\n  for (element in strsplit(colnames(new.matrix.active), \"\\\\.\")){\n    col.na.vector<-c(col.na.vector, paste(element[1], element[2], sep=\".\"))\n  }\n  \n  #breaks = seq(0,max(matrix.active),by=0.01)\n  \n  breaks <- c(seq(0, 0.05, length.out=5),seq(0.05, 1, length.out=6)[-1])\n  hm.colors <- colorpanel(n=9,low=\"blue\",mid=\"white\",high=\"red\")\n  \n  heatmap.2(new.matrix.active,trace='none',breaks=breaks,col=hm.colors,dendrogram=\"none\",Colv=NA, Rowv=NA, scale=\"none\", main=paste(\"active\",correlation.in.interest,  sep=\"_\"), labRow=rownames(new.matrix.active), labCol=col.na.vector)\n  dev.off()\n   \n}\n\n#########_________MAIN_____#############\n#setwd(\"F:/work/Favorov_data/favorov_data\")\n\n#load('ttt_all_1.RData')\n#load('ttt_active_2.RData')\n#load('ttt_brain_3.RData')\n\n#load('ttt_all_1_10000.RData')\n##load('ttt_active_2_10000.RData')\n#load('ttt_brain_3_10000.RData')\n\n#load('new_cl_1_1_10000_10000.RData')\n#load('new_cl_1_2_10000_10000.RData')\n#load('new_cl_1_3_10000_10000.RData')\n\nload('gener_1.RData')\nload('gener_2.RData')\nload('gener_3.RData')\n\n#load('new_cl_1_1.RData')\n#load('new_cl_1_2.RData')\n#load('new_cl_1_3.RData')\n\ncorrelation.in.interest<-'jaccard.measure'\nmatrix.brain<-count.correlation.count.array(correlation_result.module_cluster_brain, correlation.in.interest)\nmatrix.all<-count.correlation.count.array(correlation_result.module_cluster_all, correlation.in.interest)\nmatrix.active<-count.correlation.count.array(correlation_result.module_cluster_active,correlation.in.interest)\nheatmap.and.save(matrix.brain,matrix.all, matrix.active, correlation.in.interest)\n\ncorrelation.in.interest<-'relative.distances.ecdf.area.correlation'\nmatrix.brain<-count.correlation.count.array(correlation_result.module_cluster_brain, correlation.in.interest)\nmatrix.all<-count.correlation.count.array(correlation_result.module_cluster_all, correlation.in.interest)\nmatrix.active<-count.correlation.count.array(correlation_result.module_cluster_active,correlation.in.interest)\nheatmap.and.save(matrix.brain,matrix.all, matrix.active, correlation.in.interest)\n\n############################___pvalue_statistics\n\ncorrelation.in.interest<-'jaccard.measure.p.value'\ncorrelation.lowertails<-'jaccard.measure.lower.tail'\n\n\n\nmatrix.brain<-count.correlation.count.array(correlation_result.module_cluster_brain, correlation.in.interest)\nmatrix.all<-count.correlation.count.array(correlation_result.module_cluster_all, correlation.in.interest)\nmatrix.active<-count.correlation.count.array(correlation_result.module_cluster_active,correlation.in.interest)\n\nmatrix.brain.lowertail<- count.correlation.count.array(correlation_result.module_cluster_brain, correlation.lowertails)\nmatrix.all.lowertail<-count.correlation.count.array(correlation_result.module_cluster_all, correlation.lowertails)\nmatrix.active.lowertail<-count.correlation.count.array(correlation_result.module_cluster_active, correlation.lowertails)\n\nnew.matrix.brain<-remake.matrix(matrix.brain,matrix.brain.lowertail)\nnew.matrix.all<-remake.matrix(matrix.all,matrix.all.lowertail)\nnew.matrix.active<-remake.matrix(matrix.active,matrix.active.lowertail)\n\nheatmap.and.save.pvalue2(new.matrix.brain,new.matrix.all, new.matrix.active, correlation.in.interest)\n\n\n\ncorrelation.in.interest<-'scaled.absolute.min.distance.sum.p.value'\ncorrelation.lowertails<-'scaled.absolute.min.distance.sum.lower.tail'\nmatrix.brain<-count.correlation.count.array(correlation_result.module_cluster_brain, correlation.in.interest)\nmatrix.all<-count.correlation.count.array(correlation_result.module_cluster_all, correlation.in.interest)\nmatrix.active<-count.correlation.count.array(correlation_result.module_cluster_active,correlation.in.interest)\n\nmatrix.brain.lowertail<- count.correlation.count.array(correlation_result.module_cluster_brain, correlation.lowertails)\nmatrix.all.lowertail<-count.correlation.count.array(correlation_result.module_cluster_all, correlation.lowertails)\nmatrix.active.lowertail<-count.correlation.count.array(correlation_result.module_cluster_active, correlation.lowertails)\n\nnew.matrix.brain<-remake.matrix(matrix.brain,matrix.brain.lowertail)\nnew.matrix.all<-remake.matrix(matrix.all,matrix.all.lowertail)\nnew.matrix.active<-remake.matrix(matrix.active,matrix.active.lowertail)\n\nheatmap.and.save.pvalue2(new.matrix.brain,new.matrix.all, new.matrix.active, correlation.in.interest)\n\n\ncorrelation.in.interest<-'projection.test.p.value'\ncorrelation.lowertails<-'projection.test.lower.tail'\nmatrix.brain<-count.correlation.count.array(correlation_result.module_cluster_brain, correlation.in.interest)\nmatrix.all<-count.correlation.count.array(correlation_result.module_cluster_all, correlation.in.interest)\nmatrix.active<-count.correlation.count.array(correlation_result.module_cluster_active,correlation.in.interest)\n\nmatrix.brain.lowertail<- count.correlation.count.array(correlation_result.module_cluster_brain, correlation.lowertails)\nmatrix.all.lowertail<-count.correlation.count.array(correlation_result.module_cluster_all, correlation.lowertails)\nmatrix.active.lowertail<-count.correlation.count.array(correlation_result.module_cluster_active, correlation.lowertails)\n\nnew.matrix.brain<-remake.matrix(matrix.brain,matrix.brain.lowertail)\nnew.matrix.all<-remake.matrix(matrix.all,matrix.all.lowertail)\nnew.matrix.active<-remake.matrix(matrix.active,matrix.active.lowertail)\n\nheatmap.and.save.pvalue2(new.matrix.brain,new.matrix.all, new.matrix.active, correlation.in.interest)\n\n################_pvalue_unsigned\n\ncorrelation.in.interest<-'relative.distances.ecdf.deviation.area.p.value'\nmatrix.brain<-count.correlation.count.array(correlation_result.module_cluster_brain, correlation.in.interest)\nmatrix.all<-count.correlation.count.array(correlation_result.module_cluster_all, correlation.in.interest)\nmatrix.active<-count.correlation.count.array(correlation_result.module_cluster_active,correlation.in.interest)\nheatmap.and.save(matrix.brain,matrix.all, matrix.active, correlation.in.interest)\n\ncorrelation.in.interest<-'relative.distances.ks.p.value'\nmatrix.brain<-count.correlation.count.array(correlation_result.module_cluster_brain, correlation.in.interest)\nmatrix.all<-count.correlation.count.array(correlation_result.module_cluster_all, correlation.in.interest)\nmatrix.active<-count.correlation.count.array(correlation_result.module_cluster_active,correlation.in.interest)\nheatmap.and.save(matrix.brain,matrix.all, matrix.active, correlation.in.interest)\n\n\n\n\n\n\n\n",
    "created" : 1412065732433.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3616004416",
    "id" : "BC2A8A4E",
    "lastKnownWriteTime" : 1409231328,
    "path" : "F:/work/modules_clusters_clear/modules_clusters/make_heatmaps.R",
    "project_path" : "make_heatmaps.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}